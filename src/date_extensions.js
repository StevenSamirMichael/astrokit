Date.timescale = {
    UTC: 'UTC',
    TT: 'TT',
    TAI: 'TAI',
    GPS: 'GPS'
}

// Difference between TAI and UTC
// See Table 3.1, Explanatory Supplement to the Astronomical Almanac
let deltaAT = [
    // 1961-01-01T00:00:00.000Z
    { 'time': -283996800000, 'dt': (x) => { 1.422828 + 0.001296 * (x.mjd() - 37300) } },
    // 1961-08-01T00:00:00.000Z
    { 'time': -265680000000, 'dt': (x) => { 1.372818 + 0.001296 * (x.mjd() - 37300) } },
    // 1962-01-01T00:00:00.000Z
    { 'time': -252460800000, 'dt': (x) => { 1.845858 + 0.0011232 * (x.mjd() - 37665) } },
    // 1963-11-01T00:00:00.000Z
    { 'time': -194659200000, 'dt': (x) => { 1.945858 + 0.0011232 * (x.mjd() - 37665) } },
    // 1964-01-01T00:00:00.000Z
    { 'time': -189388800000, 'dt': (x) => 3.240130 },
    // 1964-04-01T00:00:00.000Z
    { 'time': -181526400000, 'dt': (x) => 3.340130 },
    // 1964-09-01T00:00:00.000Z
    { 'time': -168307200000, 'dt': (x) => 3.440130 },
    // 1965-01-01T00:00:00.000Z
    { 'time': -157766400000, 'dt': (x) => 3.540130 },
    // 1965-03-01T00:00:00.000Z
    { 'time': -152668800000, 'dt': (x) => 3.640130 },
    // 1965-07-01T00:00:00.000Z
    { 'time': -142128000000, 'dt': (x) => 3.740130 },
    // 1965-09-01T00:00:00.000Z
    { 'time': -136771200000, 'dt': (x) => 3.840130 },
    // 1966-01-01T00:00:00.000Z
    { 'time': -126230400000, 'dt': (x) => 4.313170 },
    // 1968-02-01T00:00:00.000Z
    { 'time': -60480000000, 'dt': (x) => 4.213170 },
    // 1972-01-01T00:00:00.000Z
    { 'time': 63072000000, 'dt': (x) => 10 },
    // 1972-07-01T00:00:00.000Z
    { 'time': 78796800000, 'dt': (x) => 11 },
    // 1973-01-01T00:00:00.000Z
    { 'time': 94694400000, 'dt': (x) => 12 },
    // 1974-01-01T00:00:00.000Z
    { 'time': 126230400000, 'dt': (x) => 13 },
    // 1975-01-01T00:00:00.000Z
    { 'time': 157766400000, 'dt': (x) => 14 },
    // 1976-01-01T00:00:00.000Z
    { 'time': 189302400000, 'dt': (x) => 15 },
    // 1977-01-01T00:00:00.000Z 
    { 'time': 220924800000, 'dt': (x) => 16 },
    // 1978-01-01T00:00:00.000Z
    { 'time': 252460800000, 'dt': (x) => 17 },
    // 1979-01-01T00:00:00.000Z
    { 'time': 283996800000, 'dt': (x) => 18 },
    // 1980-01-01T00:00:00.000Z
    { 'time': 315532800000, 'dt': (x) => 19 },
    // 1981-07-01T00:00:00.000Z
    { 'time': 362793600000, 'dt': (x) => 20 },
    // 1982-06-01T00:00:00.000Z
    { 'time': 391737600000, 'dt': (x) => 21 },
    // 1983-07-01T00:00:00.000Z
    { 'time': 425865600000, 'dt': (x) => 22 },
    // 1985-07-01T00:00:00.000Z
    { 'time': 489024000000, 'dt': (x) => 23 },
    // 1988-01-01T00:00:00.000Z
    { 'time': 567993600000, 'dt': (x) => 24 },
    // 1990-01-01T00:00:00.000Z
    { 'time': 631152000000, 'dt': (x) => 25 },
    // 1991-01-01T00:00:00.000Z
    { 'time': 662688000000, 'dt': (x) => 26 },
    // 1992-07-01T00:00:00.000Z
    { 'time': 709948800000, 'dt': (x) => 27 },
    // 1993-07-01T00:00:00.000Z
    { 'time': 741484800000, 'dt': (x) => 28 },
    // 1994-07-01T00:00:00.000Z
    { 'time': 773020800000, 'dt': (x) => 29 },
    // 1996-01-01T00:00:00.000Z
    { 'time': 820454400000, 'dt': (x) => 30 },
    // 1997-07-01T00:00:00.000Z
    { 'time': 867715200000, 'dt': (x) => 31 },
    // 1999-01-01T00:00:00.000Z
    { 'time': 915148800000, 'dt': (x) => 32 },
    // 2006-01-01T00:00:00.000Z
    { 'time': 1136073600000, 'dt': (x) => 33 },
    // 2009-01-01T00:00:00.000Z
    { 'time': 1230768000000, 'dt': (x) => 34 },
    // 2012-07-01T00:00:00.000Z
    { 'time': 1341100800000, 'dt': (x) => 35 },
    // 2015-07-01T00:00:00.000Z
    { 'time': 1435708800000, 'dt': (x) => 36 },
    // 2017-01-01T00:00:00.000Z
    { 'time': 1483228800000, 'dt': (x) => 37 }
]

let utc2tai = (t) => {
    idx = deltaAT.findIndex((x) => x.time > t.valueOf())
    if (idx > 0)
        return deltaAT[idx - 1].dt(t)
    else
        return 0
}


// Julian date at given time scale (Default is UTC)
Date.prototype.jd = function (ts) {
    let timeshift_seconds = 0
    if (ts == undefined) {
        ts = Date.timescale.UTC
    }
    else if (ts == Date.timescale.TAI) {
        timeshift_seconds = utc2tai(this)
    }
    else if (ts == Date.timescale.TT) {
        idx = deltaAT.findIndex((x) => x.time > this.valueOf())
        timeshift_seconds = utc2tai(this) + 32.184
    }
    else if (ts == Date.timescale.GPS) {
        const utcgps0 = new Date(Date.UTC(1980, 0, 6))
        if (this > utcgps0)
            timeshift_seconds = utc2tai(this) - 19
    }
    return ((this.valueOf() + timeshift_seconds * 1000) / 86400000) + 2440587.5
}

// Modified julian date at given time scale (Default is UTC)
Date.prototype.mjd = function (ts) {
    return this.jd(ts) - 2400000.5
}


